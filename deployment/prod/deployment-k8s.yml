# Namespace (optionnel)
apiVersion: v1
kind: Namespace
metadata:
  name: my-app-namespace

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: my-app-namespace
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-config
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc

---

# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: my-app-namespace
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
  type: ClusterIP


---


# Spring Boot Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-deployment
  namespace: my-app-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-backend
  template:
    metadata:
      labels:
        app: spring-backend
    spec:
      containers:
        - name: spring-backend
          image: aminelemsi/aminelemsi-5arctic3-g3-devops_project:latest
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: spring-boot-config
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: spring-boot-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: spring-boot-secret
                  key: SPRING_DATASOURCE_PASSWORD

---

# Spring Boot Backend Service
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-service
  namespace: my-app-namespace
spec:
  ports:
    - port: 8082
      targetPort: 8082
      nodePort: 30051
  selector:
    app: spring-backend
  type: NodePort

---

# Angular Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-deployment
  namespace: my-app-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: angular-frontend
  template:
    metadata:
      labels:
        app: angular-frontend
    spec:
      containers:
        - name: angular-frontend
          image: aminelemsi/aminelemsi-5arctic3-g3-devops_project_front:v7
          ports:
            - containerPort: 80

---

# Angular Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: angular-service
  namespace: my-app-namespace
spec:
  ports:
    - protocol: "TCP"
      port: 8099
      targetPort: 80
      nodePort: 30050
  selector:
    app: angular-frontend
  type: NodePort